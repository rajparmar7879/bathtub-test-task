[{"/home/dell/my/practiseWebConcepts/react-typescript/src/index.tsx":"1","/home/dell/my/practiseWebConcepts/react-typescript/src/App.tsx":"2"},{"size":119,"mtime":1613879621037,"results":"3","hashOfConfig":"4"},{"size":2729,"mtime":1613892633813,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"177wq3x",{"filePath":"9","messages":"10","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/home/dell/my/practiseWebConcepts/react-typescript/src/index.tsx",[],["12","13"],"/home/dell/my/practiseWebConcepts/react-typescript/src/App.tsx",["14","15","16"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { createArrayTypeNode } from \"typescript\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Bathtub = styled.div`\n  height: 100px;\n  width: 90%;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nconst ButtonContainer = styled.div``;\n\nconst Button = styled.button<{ color: string; bColor: string }>`\n  display: inline-block;\n  background-color: ${(props) => props.bColor};\n  color: ${(props) => props.color};\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  display: block;\n  cursor: pointer;\n`;\n\nconst WaterLevel = styled.div`\n  height: 20px;\n  background-color: skyblue;\n`;\n\nconst createArray = (num: number) => {\n  let arr = [];\n  for (let i = 0; i < num; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\nconst App = () => {\n  const [waterLevel, setWaterLevel] = useState(0);\n  const [clickIncrease, setClickIncrease] = useState(false);\n  const [clickDecrease, setClickDecrease] = useState(false);\n  const [intervalId, setIntervalId] = useState<any>(\"\");\n\n  useEffect(() => {\n    if (clickIncrease) {\n      const interval = setInterval(() => {\n        setWaterLevel((waterLevel) => waterLevel + 1);\n      }, 2000);\n      setIntervalId(interval);\n    }\n  }, [clickIncrease]);\n\n  useEffect(() => {\n    if (clickIncrease) {\n      const interval = setInterval(() => {\n        setWaterLevel((waterLevel) => waterLevel - 1);\n      }, 2000);\n      setIntervalId(interval);\n    }\n  }, [clickDecrease]);\n\n  useEffect(() => {\n    if (waterLevel === 0 || waterLevel === 5) {\n      clearInterval(intervalId);\n    }\n  }, [waterLevel]);\n\n  const handleIncreaseWaterLevel = () => {\n    setClickIncrease(true);\n  };\n\n  const handleDecreaseWaterLevel = () => {\n    setClickDecrease(true);\n  };\n\n  return (\n    <Container>\n      <h1>Bathtub</h1>\n      <Bathtub>\n        {createArray(waterLevel).map((el) => (\n          <WaterLevel />\n        ))}\n      </Bathtub>\n      {true && waterLevel}\n      <ButtonContainer>\n        {waterLevel === 0 && (\n          <Button\n            color=\"white\"\n            bColor=\"skyblue\"\n            onClick={handleIncreaseWaterLevel}\n          >\n            Increase Water Level\n          </Button>\n        )}\n        {waterLevel === 5 && (\n          <Button\n            color=\"black\"\n            bColor=\"white\"\n            onClick={handleDecreaseWaterLevel}\n          >\n            Decrease Water Level\n          </Button>\n        )}\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default App;\n",{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","severity":1,"message":"22","line":3,"column":10,"nodeType":"23","messageId":"24","endLine":3,"endColumn":29},{"ruleId":"25","severity":1,"message":"26","line":71,"column":6,"nodeType":"27","endLine":71,"endColumn":21,"suggestions":"28"},{"ruleId":"25","severity":1,"message":"29","line":77,"column":6,"nodeType":"27","endLine":77,"endColumn":18,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"@typescript-eslint/no-unused-vars","'createArrayTypeNode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clickIncrease'. Either include it or remove the dependency array.","ArrayExpression",["33"],"React Hook useEffect has a missing dependency: 'intervalId'. Either include it or remove the dependency array.",["34"],"no-global-assign","no-unsafe-negation",{"desc":"35","fix":"36"},{"desc":"37","fix":"38"},"Update the dependencies array to be: [clickDecrease, clickIncrease]",{"range":"39","text":"40"},"Update the dependencies array to be: [intervalId, waterLevel]",{"range":"41","text":"42"},[1687,1702],"[clickDecrease, clickIncrease]",[1818,1830],"[intervalId, waterLevel]"]